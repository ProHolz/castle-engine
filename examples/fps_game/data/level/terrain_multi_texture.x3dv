#X3D V3.2 utf8
PROFILE Interchange

# Adds on glTF additional texture layers.

Effect {
  initializeOnly SFNode mask ImageTexture {
    url "textures/clouds.jpg"
    flipVertically TRUE # adjust to glTF texture coordinates
  }
  initializeOnly SFNode layer2 ImageTexture {
    url "textures/Grass02.png"
    flipVertically TRUE # adjust to glTF texture coordinates
  }
  initializeOnly SFNode layer2_normal ImageTexture {
    url "textures/Grass02_normal.png"
    flipVertically TRUE # adjust to glTF texture coordinates
  }

  initializeOnly SFFloat mask_uv_scale 0.02
  initializeOnly SFFloat layer2_uv_scale 0.5

  initializeOnly SFFloat layer2_normalScale 1.5

  parts [
    EffectPart {
      type "FRAGMENT"
      url "data:text/plain,
        varying vec4 castle_TexCoord0;

        uniform sampler2D mask;
        uniform sampler2D layer2;
        uniform sampler2D layer2_normal;

        uniform float mask_uv_scale;
        uniform float layer2_uv_scale;
        uniform float layer2_normalScale;

        void PLUG_main_texture_apply(inout vec4 fragment_color, const in vec3 normal_eye)
        {
          vec4 col_mask = texture2D(mask, castle_TexCoord0.xy * mask_uv_scale);

          vec4 col_layer2 = texture2D(layer2, castle_TexCoord0.xy * layer2_uv_scale);

          fragment_color.rgb = mix(fragment_color.rgb, col_layer2.rgb, col_mask.r);
        }

        // avoid redeclaring for GL_ES
        #ifndef GL_ES
        varying mat3 castle_tangent_to_eye_space;
        #endif

        void PLUG_fragment_eye_space(const vec4 vertex, inout vec3 normal_eye_fragment)
        {
         vec4 col_mask = texture2D(mask, castle_TexCoord0.xy * mask_uv_scale);

          vec3 layer2_normal_tangent = texture2D(layer2_normal,
            castle_TexCoord0.xy * layer2_uv_scale).xyz * 2.0 - vec3(1.0);

          layer2_normal_tangent *= vec3(layer2_normalScale, layer2_normalScale, 1.0);

          vec3 layer2_normal_final = normalize(castle_tangent_to_eye_space * layer2_normal_tangent);
          //layer2_normal_tangent;

          normal_eye_fragment = mix(normal_eye_fragment, layer2_normal_final, col_mask.r);
        }
        "
    }
  ]
}

Inline { url "level2.gltf" }
